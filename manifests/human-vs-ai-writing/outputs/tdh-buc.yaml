name: >-
  Human vs ai writing and illustrations - baseline study replicating subset of
  Tomlinson et al 2024 calculations.
description: >-
  Aims to replicate the methodology described by Tomlinson et al 2024
  (https://www.nature.com/articles/s41598-024-54271-x#data-availibility), i.e.
  top down human, bottom up AI. Only considers USA human and Chat-GPT model.
tags: null
explainer: true
aggregation:
  metrics:
    - carbon
  type: component
initialize:
  plugins:
    multiply-n-servers-by-embodied-c-per-server:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - n-servers
          - embodied-carbon-per-server
        output-parameter: server-carbon
      parameter-metadata:
        inputs:
          n-servers:
            unit: servers
            description: Number of servers used to train model.
            aggregation-method:
              time: copy
              component: copy
          embodied-carbon-per-server:
            unit: gCO2e
            description: Embodied carbon in a server, from manufacturer's datasheet.
            aggregation-method:
              time: copy
              component: copy
        outputs:
          server-carbon:
            unit: gCO2e
            description: Embodied carbon in servers used for training or inference.
            aggregation-method:
              time: copy
              component: copy
    scale-embodied-carbon-to-usage-time:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - server-carbon
          - lifespan-scaling-factor
        output-parameter: carbon-total
      parameter-metadata:
        inputs:
          server-carbon:
            unit: gCO2e
            description: embodied carbon in servers used for training or inference.
            aggregation-method:
              time: copy
              component: copy
          lifespan-scaling-factor:
            unit: none
            description: >-
              scaling factor to correct embodied carbon according to server
              usage time.
            aggregation-method:
              time: copy
              component: copy
        outputs:
          carbon-total:
            unit: gCO2e
            description: Embodied carbon in servers used for training or inference, scaled.
            aggregation-method:
              time: sum
              component: sum
    distribute-carbon-over-n-queries:
      path: builtin
      method: Divide
      config:
        numerator: carbon-total
        denominator: n-queries
        output: carbon
      parameter-metadata:
        inputs:
          carbon-total:
            unit: gCO2e
            description: Embodied carbon in servers used for training or inference, scaled.
            aggregation-method:
              time: sum
              component: sum
          n-queries:
            unit: queries
            description: number of queries to amortize carbon over
            aggregation-method:
              time: copy
              component: copy
        outputs:
          carbon:
            unit: gCO2e
            description: Carbon in gCO2e.
            aggregation-method:
              time: sum
              component: sum
    multiply-n-gpus-by-gpu-power:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - n-gpus
          - gpu-power
        output-parameter: total-power
      parameter-metadata:
        inputs:
          n-gpus:
            unit: gpus
            description: number of gpus used to train model.
            aggregation-method:
              time: copy
              component: copy
          gpu-power:
            unit: watts
            description: power of each gpu.
            aggregation-method:
              time: copy
              component: copy
        outputs:
          total-power:
            unit: watts
            description: power used by all the GPUs training model.
            aggregation-method:
              time: sum
              component: sum
    multiply-power-by-time:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - total-power
          - training-time
        output-parameter: energy-wh
      parameter-metadata:
        inputs:
          total-power:
            unit: watts
            description: power used by all the GPUs training model.
            aggregation-method:
              time: sum
              component: sum
          training-time:
            unit: hours
            description: time taen to train model, in hours.
            aggregation-method:
              time: copy
              component: copy
        outputs:
          energy-wh:
            unit: wh
            description: energy used to train model.
            aggregation-method:
              time: sum
              component: sum
    convert-wh-to-kwh:
      path: builtin
      method: Coefficient
      config:
        input-parameter: energy-wh
        coefficient: 0.001
        output-parameter: energy-kwh
    apply-pue:
      path: builtin
      method: Coefficient
      config:
        input-parameter: energy-kwh
        coefficient: 1.1
        output-parameter: energy-kwh
    multiply-energy-by-grid-intensity:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - energy-kwh
          - grid-intensity
        output-parameter: carbon-total
      parameter-metadata:
        inputs:
          energy-kwh:
            unit: kwh
            description: energy used to train model.
            aggregation-method:
              time: sum
              component: sum
          grid-intensity:
            unit: gCO2e/kwh
            description: carbon emitted per unit energy consumed.
            aggregation-method:
              time: copy
              component: copy
        outputs:
          carbon-total:
            unit: gCO2e
            description: carbon emitted.
            aggregation-method:
              time: sum
              component: sum
    compute-writing-rate-in-hours-per-page:
      path: builtin
      method: Divide
      config:
        numerator: writing-rate-words-per-page
        denominator: writing-rate-words-per-hour
        output: writing-rate-hours-per-page
      parameter-metadata:
        inputs:
          writing-rate-words-per-page:
            unit: words/page
            description: >-
              number of words on a page of writing, per common knowledge, or
              https://wordcounter.net/words-per-page
            aggregation-method:
              time: copy
              component: copy
          writing-rate-words-per-hour:
            unit: words/hour
            description: number of words a human writes in an hour
            aggregation-method:
              time: sum
              component: sum
        outputs:
          writing-rate-hours-per-page:
            unit: hours/page
            description: >-
              How long it takes a human to write a page of text. Int he paper
              supp info sheet it is cell B20.
            aggregation-method:
              time: copy
              component: copy
    multiply-human-carbon-footprint-by-writing-rate:
      path: builtin
      method: Multiply
      config:
        input-parameters:
          - writing-rate-hours-per-page
          - human-footprint-in-gco2-per-hour
        output-parameter: carbon
      parameter-metadata:
        inputs:
          writing-rate-hours-per-page:
            unit: hours/page
            description: >-
              How long it takes a human to write a page of text. Int he paper
              supp info sheet it is cell B20.
            aggregation-method:
              time: copy
              component: copy
          human-footprint-in-gco2-per-hour:
            unit: gCO2e/hour
            description: >-
              ow much carbon a human emits per hour for a given country, from
              https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions
              and scaled to per hour.In the paper supp info sheet it is cell B21
              or B22 (USA or India).
            aggregation-method:
              time: sum
              component: sum
        outputs:
          carbon:
            unit: gCO2e
            description: >-
              How much carbon is emitted when a person writes a page of text. in
              the paper it is cell B72 (USA) or B73 (India)
            aggregation-method:
              time: sum
              component: sum
execution:
  command: >-
    /home/joe/.nvm/versions/node/v21.4.0/bin/node
    /home/joe/.nvm/versions/node/v21.4.0/bin/if-run -m
    manifests/tomlinson-paper/manifests/tdh-buc.yml -o
    manifests/tomlinson-paper/outputs/tdh-buc.yml --debug
  environment:
    if-version: 0.7.2
    os: linux
    os-version: 5.15.0-126-generic
    node-version: 21.4.0
    date-time: 2024-11-27T14:32:54.634Z (UTC)
    dependencies:
      - '@babel/core@7.22.10'
      - '@babel/preset-typescript@7.23.3'
      - '@commitlint/cli@18.6.0'
      - '@commitlint/config-conventional@18.6.0'
      - '@ethereum-attestation-service/eas-sdk@2.7.0'
      - '@grnsft/if-core@0.0.28'
      - '@jest/globals@29.7.0'
      - '@types/jest@29.5.8'
      - '@types/js-yaml@4.0.9'
      - '@types/luxon@3.4.2'
      - '@types/node@20.9.0'
      - axios-mock-adapter@1.22.0
      - axios@1.7.7
      - cross-env@7.0.3
      - csv-parse@5.5.6
      - csv-stringify@6.4.6
      - dotenv@16.4.5
      - ethers@6.13.4
      - fixpack@4.0.0
      - gts@5.2.0
      - husky@8.0.3
      - jest@29.7.0
      - js-yaml@4.1.0
      - lint-staged@15.2.10
      - luxon@3.4.4
      - release-it@16.3.0
      - rimraf@5.0.5
      - serve@14.2.4
      - ts-command-line-args@2.5.1
      - ts-jest@29.1.1
      - typescript-cubic-spline@1.0.1
      - typescript@5.2.2
      - winston@3.11.0
      - zod@3.23.8
  status: success
explain:
  compute-writing-rate-in-hours-per-page:
    inputs:
      writing-rate-words-per-page:
        unit: words/page
        description: >-
          number of words on a page of writing, per common knowledge, or
          https://wordcounter.net/words-per-page
        aggregation-method:
          time: copy
          component: copy
      writing-rate-words-per-hour:
        unit: words/hour
        description: number of words a human writes in an hour
        aggregation-method:
          time: sum
          component: sum
    outputs:
      writing-rate-hours-per-page:
        unit: hours/page
        description: >-
          How long it takes a human to write a page of text. Int he paper supp
          info sheet it is cell B20.
        aggregation-method:
          time: copy
          component: copy
  multiply-human-carbon-footprint-by-writing-rate:
    inputs:
      writing-rate-hours-per-page:
        unit: hours/page
        description: >-
          How long it takes a human to write a page of text. Int he paper supp
          info sheet it is cell B20.
        aggregation-method:
          time: copy
          component: copy
      human-footprint-in-gco2-per-hour:
        unit: gCO2e/hour
        description: >-
          ow much carbon a human emits per hour for a given country, from
          https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions and
          scaled to per hour.In the paper supp info sheet it is cell B21 or B22
          (USA or India).
        aggregation-method:
          time: sum
          component: sum
    outputs:
      carbon:
        unit: gCO2e
        description: >-
          How much carbon is emitted when a person writes a page of text. in the
          paper it is cell B72 (USA) or B73 (India)
        aggregation-method:
          time: sum
          component: sum
  multiply-n-servers-by-embodied-c-per-server:
    inputs:
      n-servers:
        unit: servers
        description: Number of servers used to train model.
        aggregation-method:
          time: copy
          component: copy
      embodied-carbon-per-server:
        unit: gCO2e
        description: Embodied carbon in a server, from manufacturer's datasheet.
        aggregation-method:
          time: copy
          component: copy
    outputs:
      server-carbon:
        unit: gCO2e
        description: Embodied carbon in servers used for training or inference.
        aggregation-method:
          time: copy
          component: copy
  scale-embodied-carbon-to-usage-time:
    inputs:
      server-carbon:
        unit: gCO2e
        description: embodied carbon in servers used for training or inference.
        aggregation-method:
          time: copy
          component: copy
      lifespan-scaling-factor:
        unit: none
        description: >-
          scaling factor to correct embodied carbon according to server usage
          time.
        aggregation-method:
          time: copy
          component: copy
    outputs:
      carbon-total:
        unit: gCO2e
        description: Embodied carbon in servers used for training or inference, scaled.
        aggregation-method:
          time: sum
          component: sum
  distribute-carbon-over-n-queries:
    inputs:
      carbon-total:
        unit: gCO2e
        description: Embodied carbon in servers used for training or inference, scaled.
        aggregation-method:
          time: sum
          component: sum
      n-queries:
        unit: queries
        description: number of queries to amortize carbon over
        aggregation-method:
          time: copy
          component: copy
    outputs:
      carbon:
        unit: gCO2e
        description: Carbon in gCO2e.
        aggregation-method:
          time: sum
          component: sum
  multiply-n-gpus-by-gpu-power:
    inputs:
      n-gpus:
        unit: gpus
        description: number of gpus used to train model.
        aggregation-method:
          time: copy
          component: copy
      gpu-power:
        unit: watts
        description: power of each gpu.
        aggregation-method:
          time: copy
          component: copy
    outputs:
      total-power:
        unit: watts
        description: power used by all the GPUs training model.
        aggregation-method:
          time: sum
          component: sum
  multiply-power-by-time:
    inputs:
      total-power:
        unit: watts
        description: power used by all the GPUs training model.
        aggregation-method:
          time: sum
          component: sum
      training-time:
        unit: hours
        description: time taen to train model, in hours.
        aggregation-method:
          time: copy
          component: copy
    outputs:
      energy-wh:
        unit: wh
        description: energy used to train model.
        aggregation-method:
          time: sum
          component: sum
  multiply-energy-by-grid-intensity:
    inputs:
      energy-kwh:
        unit: kwh
        description: energy used to train model.
        aggregation-method:
          time: sum
          component: sum
      grid-intensity:
        unit: gCO2e/kwh
        description: carbon emitted per unit energy consumed.
        aggregation-method:
          time: copy
          component: copy
    outputs:
      carbon-total:
        unit: gCO2e
        description: carbon emitted.
        aggregation-method:
          time: sum
          component: sum
tree:
  children:
    human:
      pipeline:
        compute:
          - compute-writing-rate-in-hours-per-page
          - multiply-human-carbon-footprint-by-writing-rate
      defaults:
        writing-rate-words-per-hour: 300
        writing-rate-words-per-page: 250
        human-footprint-in-gco2-per-hour: 1712.328767123329
      inputs:
        - timestamp: '2024-09-01T10:00:00'
          duration: 86400
      outputs:
        - timestamp: '2024-09-01T10:00:00'
          duration: 86400
          writing-rate-words-per-hour: 300
          writing-rate-words-per-page: 250
          human-footprint-in-gco2-per-hour: 1712.328767123329
          writing-rate-hours-per-page: 0.8333333333333334
          carbon: 1426.940639269441
    chat-gpt:
      children:
        embodied:
          children:
            training:
              pipeline:
                compute:
                  - multiply-n-servers-by-embodied-c-per-server
                  - scale-embodied-carbon-to-usage-time
                  - distribute-carbon-over-n-queries
              defaults:
                n-servers: 1600
                embodied-carbon-per-server: 9180000
                lifespan-scaling-factor: 0.0833
                n-queries: 300000000
              inputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
              outputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
                  n-servers: 1600
                  embodied-carbon-per-server: 9180000
                  lifespan-scaling-factor: 0.0833
                  n-queries: 300000000
                  server-carbon: 14688000000
                  carbon-total: 1223510400
                  carbon: 4.078368
            inference:
              pipeline:
                compute:
                  - multiply-n-servers-by-embodied-c-per-server
                  - scale-embodied-carbon-to-usage-time
                  - distribute-carbon-over-n-queries
              defaults:
                n-servers: 3617
                embodied-carbon-per-server: 9180000
                lifespan-scaling-factor: 0.020833
                n-queries: 300000000
              inputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
              outputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
                  n-servers: 3617
                  embodied-carbon-per-server: 9180000
                  lifespan-scaling-factor: 0.020833
                  n-queries: 300000000
                  server-carbon: 33204060000
                  carbon-total: 691740181.98
                  carbon: 2.3058006066
          outputs:
            - carbon: 6.3841686066
              timestamp: '2024-09-01T10:00:00'
              duration: 86400
          aggregated:
            carbon: 6.3841686066
        operational:
          children:
            training:
              pipeline:
                compute:
                  - multiply-n-gpus-by-gpu-power
                  - multiply-power-by-time
                  - convert-wh-to-kwh
                  - apply-pue
                  - multiply-energy-by-grid-intensity
                  - distribute-carbon-over-n-queries
              defaults:
                n-gpus: 4800
                gpu-power: 300
                training-time: 2880
                grid-intensity: 390
                n-queries: 300000000
              inputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
              outputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
                  n-gpus: 4800
                  gpu-power: 300
                  training-time: 2880
                  grid-intensity: 390
                  n-queries: 300000000
                  total-power: 1440000
                  energy-wh: 4147200000
                  energy-kwh: 4561920
                  carbon-total: 1779148800
                  carbon: 5.930496
            inference:
              pipeline:
                compute:
                  - multiply-n-gpus-by-gpu-power
                  - multiply-power-by-time
                  - convert-wh-to-kwh
                  - apply-pue
                  - multiply-energy-by-grid-intensity
                  - distribute-carbon-over-n-queries
              defaults:
                n-gpus: 28936
                gpu-power: 300
                training-time: 24
                grid-intensity: 390
                n-queries: 10000000
              inputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
              outputs:
                - timestamp: '2024-09-01T10:00:00'
                  duration: 86400
                  n-gpus: 28936
                  gpu-power: 300
                  training-time: 24
                  grid-intensity: 390
                  n-queries: 10000000
                  total-power: 8680800
                  energy-wh: 208339200
                  energy-kwh: 229173.12000000002
                  carbon-total: 89377516.80000001
                  carbon: 8.937751680000002
          outputs:
            - carbon: 14.868247680000001
              timestamp: '2024-09-01T10:00:00'
              duration: 86400
          aggregated:
            carbon: 14.868247680000001
      outputs:
        - carbon: 21.252416286600003
          timestamp: '2024-09-01T10:00:00'
          duration: 86400
      aggregated:
        carbon: 21.252416286600003
  outputs:
    - carbon: 1448.193055556041
      timestamp: '2024-09-01T10:00:00'
      duration: 86400
  aggregated:
    carbon: 1448.193055556041
